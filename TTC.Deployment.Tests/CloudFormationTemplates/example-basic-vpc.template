{
    "AWSTemplateFormatVersion": "2010-09-09",
    "Description": "AWS.Removal.Tests VPC (Please Delete Me)",
    "Parameters": {
    },
    "Resources": {
        "vpc1": {
            "Type": "AWS::EC2::VPC",
            "Properties": {
                "CidrBlock": "10.0.0.0/16",
                "InstanceTenancy": "default",
                "EnableDnsSupport": "true",
                "EnableDnsHostnames": "true",
                "Tags": [
                    { "Key": "Name", "Value": "TTC.Deployment.Tests VPC" }
                ]
            }
        },
        "publicSubnet1": {
            "Type": "AWS::EC2::Subnet",
            "Properties": {
                "CidrBlock": "10.0.0.0/24",
                "AvailabilityZone": "us-west-2a",
                "VpcId": { "Ref": "vpc1" },
                "Tags": [
                    { "Key": "Name", "Value": "PublicSubnet" }
                ]
            }
        },
        "internetGateway1": {
            "Type": "AWS::EC2::InternetGateway",
            "Properties": { }
        },
        "dhcpOptions1": {
            "Type": "AWS::EC2::DHCPOptions",
            "Properties": {
                "DomainName": "ec2.internal",
                "DomainNameServers": [ "AmazonProvidedDNS" ]
            }
        },
        "networkAcl1": {
            "Type": "AWS::EC2::NetworkAcl",
            "Properties": {
                "VpcId": { "Ref": "vpc1" }
            }
        },
        "routeTable1": {
            "Type": "AWS::EC2::RouteTable",
            "Properties": {
                "VpcId": { "Ref": "vpc1" }
            }
        },
        "routeTable2": {
            "Type": "AWS::EC2::RouteTable",
            "Properties": {
                "VpcId": { "Ref": "vpc1" }
            }
        },
        "securityGroup1": {
            "Type": "AWS::EC2::SecurityGroup",
            "Properties": {
                "GroupDescription": "Security Group",
                "VpcId": {
                    "Ref": "vpc1"
                },
                "Tags": [
                    {
                        "Key": "Name",
                        "Value": "TemplatePublicSecurityGroup"
                    }
                ]
            }
        },
        "acl1": {
            "Type": "AWS::EC2::NetworkAclEntry",
            "Properties": {
                "CidrBlock": "0.0.0.0/0",
                "Egress": "true",
                "Protocol": "-1",
                "RuleAction": "allow",
                "RuleNumber": "100",
                "NetworkAclId": {
                    "Ref": "networkAcl1"
                }
            }
        },
        "acl2": {
            "Type": "AWS::EC2::NetworkAclEntry",
            "Properties": {
                "CidrBlock": "0.0.0.0/0",
                "Protocol": "-1",
                "RuleAction": "allow",
                "RuleNumber": "100",
                "NetworkAclId": {
                    "Ref": "networkAcl1"
                }
            }
        },
        "subnetacl1": {
            "Type": "AWS::EC2::SubnetNetworkAclAssociation",
            "Properties": {
                "NetworkAclId": {
                    "Ref": "networkAcl1"
                },
                "SubnetId": {
                    "Ref": "publicSubnet1"
                }
            }
        },
        "gatewayAttachment1": {
            "Type": "AWS::EC2::VPCGatewayAttachment",
            "Properties": {
                "VpcId": {
                    "Ref": "vpc1"
                },
                "InternetGatewayId": {
                    "Ref": "internetGateway1"
                }
            }
        },
        "subnetroute2": {
            "Type": "AWS::EC2::SubnetRouteTableAssociation",
            "Properties": {
                "RouteTableId": {
                    "Ref": "routeTable2"
                },
                "SubnetId": {
                    "Ref": "publicSubnet1"
                }
            }
        },
        "route1": {
            "Type": "AWS::EC2::Route",
            "Properties": {
                "DestinationCidrBlock": "0.0.0.0/0",
                "RouteTableId": {
                    "Ref": "routeTable1"
                },
                "GatewayId": {
                    "Ref": "internetGateway1"
                }
            },
            "DependsOn": "gatewayAttachment1"
        },
        "route2": {
            "Type": "AWS::EC2::Route",
            "Properties": {
                "DestinationCidrBlock": "0.0.0.0/0",
                "RouteTableId": {
                    "Ref": "routeTable2"
                },
                "GatewayId": {
                    "Ref": "internetGateway1"
                }
            },
            "DependsOn": "gatewayAttachment1"
        },
        "vpcDhcpOptionsAssociation1": {
            "Type": "AWS::EC2::VPCDHCPOptionsAssociation",
            "Properties": {
                "VpcId": {
                    "Ref": "vpc1"
                },
                "DhcpOptionsId": {
                    "Ref": "dhcpOptions1"
                }
            }
        },
        "ingress1": {
            "Type": "AWS::EC2::SecurityGroupIngress",
            "Properties": {
                "GroupId": {
                    "Ref": "securityGroup1"
                },
                "IpProtocol": "tcp",
                "FromPort": "80",
                "ToPort": "80",
                "CidrIp": "0.0.0.0/0"
            }
        },
        "ingress2": {
            "Type": "AWS::EC2::SecurityGroupIngress",
            "Properties": {
                "GroupId": {
                    "Ref": "securityGroup1"
                },
                "IpProtocol": "tcp",
                "FromPort": "443",
                "ToPort": "443",
                "CidrIp": "0.0.0.0/0"
            }
        },
        "ingress3": {
            "Type": "AWS::EC2::SecurityGroupIngress",
            "Properties": {
                "GroupId": {
                    "Ref": "securityGroup1"
                },
                "IpProtocol": "icmp",
                "FromPort": "-1",
                "ToPort": "-1",
                "CidrIp": "10.0.1.0/24"
            }
        },
        "egress1": {
            "Type": "AWS::EC2::SecurityGroupEgress",
            "Properties": {
                "GroupId": {
                    "Ref": "securityGroup1"
                },
                "IpProtocol": "-1",
                "CidrIp": "0.0.0.0/0"
            }
        },
        "egress2": {
            "Type": "AWS::EC2::SecurityGroupEgress",
            "Properties": {
                "GroupId": {
                    "Ref": "securityGroup1"
                },
                "IpProtocol": "tcp",
                "FromPort": "80",
                "ToPort": "80",
                "CidrIp": "0.0.0.0/0"
            }
        }
    }
}
